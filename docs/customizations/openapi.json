{
  "swagger": "2.0",
  "info": {
    "title": "Mayan EDMS API",
    "description": "Free Open Source Electronic Document Management System",
    "license": {
      "name": "Apache 2.0"
    },
    "version": "v4"
  },
  "host": "localhost:8080",
  "schemes": [
    "http"
  ],
  "basePath": "/api/v4",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Basic": {
      "type": "basic"
    }
  },
  "security": [
    {
      "Basic": []
    }
  ],
  "paths": {
    "/announcements/": {
      "get": {
        "operationId": "announcements_list",
        "description": "Returns a list of all the announcements.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "announcements"
        ]
      },
      "post": {
        "operationId": "announcements_create",
        "description": "Create a new announcement.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "announcements"
        ]
      },
      "parameters": []
    },
    "/announcements/{announcement_id}/": {
      "get": {
        "operationId": "announcements_read",
        "description": "Return the details of the selected announcement.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "announcements"
        ]
      },
      "put": {
        "operationId": "announcements_update",
        "description": "Edit the selected announcement.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "announcements"
        ]
      },
      "patch": {
        "operationId": "announcements_partial_update",
        "description": "Edit the selected announcement.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "announcements"
        ]
      },
      "delete": {
        "operationId": "announcements_delete",
        "description": "Delete the selected announcement.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "announcements"
        ]
      },
      "parameters": [
        {
          "name": "announcement_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/app_image_error/{app_image_error_name}/image/": {
      "get": {
        "operationId": "app_image_error_image_read",
        "description": "Returns an image representation of the selected app image error.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "app_image_error"
        ]
      },
      "parameters": [
        {
          "name": "app_image_error_name",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/assets/": {
      "get": {
        "operationId": "assets_list",
        "description": "Returns a list of all the assets.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "assets"
        ]
      },
      "post": {
        "operationId": "assets_create",
        "description": "Create a new asset.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "assets"
        ]
      },
      "parameters": []
    },
    "/assets/{asset_id}/": {
      "get": {
        "operationId": "assets_read",
        "description": "Return the details of the selected asset.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "assets"
        ]
      },
      "put": {
        "operationId": "assets_update",
        "description": "Edit the properties of the selected asset.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "assets"
        ]
      },
      "patch": {
        "operationId": "assets_partial_update",
        "description": "Edit the properties of the selected asset.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "assets"
        ]
      },
      "delete": {
        "operationId": "assets_delete",
        "description": "Delete the selected asset.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "assets"
        ]
      },
      "parameters": [
        {
          "name": "asset_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/assets/{asset_id}/image/": {
      "get": {
        "operationId": "assets_image_read",
        "description": "Returns an image representation of the selected asset.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "assets"
        ]
      },
      "parameters": [
        {
          "name": "asset_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/auth/token/obtain/": {
      "post": {
        "operationId": "auth_token_obtain_create",
        "description": "Obtain an API authentication token.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthToken"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AuthToken"
            }
          }
        },
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/batch_requests/": {
      "post": {
        "operationId": "batch_requests_create",
        "description": "Submit a batch API request.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "batch_requests"
        ]
      },
      "parameters": []
    },
    "/cabinets/": {
      "get": {
        "operationId": "cabinets_list",
        "description": "Returns a list of all the cabinets.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "cabinets"
        ]
      },
      "post": {
        "operationId": "cabinets_create",
        "description": "Create a new cabinet.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "cabinets"
        ]
      },
      "parameters": []
    },
    "/cabinets/{cabinet_id}/": {
      "get": {
        "operationId": "cabinets_read",
        "description": "Returns the details of the selected cabinet.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "cabinets"
        ]
      },
      "put": {
        "operationId": "cabinets_update",
        "description": "Edit the selected cabinet.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "cabinets"
        ]
      },
      "patch": {
        "operationId": "cabinets_partial_update",
        "description": "Edit the selected cabinet.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "cabinets"
        ]
      },
      "delete": {
        "operationId": "cabinets_delete",
        "description": "Delete the selected cabinet.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "cabinets"
        ]
      },
      "parameters": [
        {
          "name": "cabinet_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/cabinets/{cabinet_id}/documents/": {
      "get": {
        "operationId": "cabinets_documents_list",
        "description": "Returns a list of all the documents contained in a particular cabinet.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "cabinets"
        ]
      },
      "parameters": [
        {
          "name": "cabinet_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/cabinets/{cabinet_id}/documents/add/": {
      "post": {
        "operationId": "cabinets_documents_add_create",
        "description": "Add a document to a cabinet.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "cabinets"
        ]
      },
      "parameters": [
        {
          "name": "cabinet_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/cabinets/{cabinet_id}/documents/remove/": {
      "post": {
        "operationId": "cabinets_documents_remove_create",
        "description": "Remove a document from a cabinet.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "cabinets"
        ]
      },
      "parameters": [
        {
          "name": "cabinet_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/checkouts/": {
      "get": {
        "operationId": "checkouts_list",
        "description": "Returns a list of all the documents that are currently checked out.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "checkouts"
        ]
      },
      "post": {
        "operationId": "checkouts_create",
        "description": "Checkout a document.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "checkouts"
        ]
      },
      "parameters": []
    },
    "/checkouts/{checkout_id}/checkout_info/": {
      "get": {
        "operationId": "checkouts_checkout_info_read",
        "description": "Retrieve the details of the selected checked out document entry.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "checkouts"
        ]
      },
      "delete": {
        "operationId": "checkouts_checkout_info_delete",
        "description": "Checkin a document.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "checkouts"
        ]
      },
      "parameters": [
        {
          "name": "checkout_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/content_types/": {
      "get": {
        "operationId": "content_types_list",
        "description": "Returns a list of all the available content types.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "content_types"
        ]
      },
      "parameters": []
    },
    "/document_file_actions/": {
      "get": {
        "operationId": "document_file_actions_list",
        "description": "Returns a list of the available document file actions.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_file_actions"
        ]
      },
      "parameters": []
    },
    "/document_types/": {
      "get": {
        "operationId": "document_types_list",
        "description": "Returns a list of all the document types.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "post": {
        "operationId": "document_types_create",
        "description": "Create a new document type.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "parameters": []
    },
    "/document_types/{document_type_id}/": {
      "get": {
        "operationId": "document_types_read",
        "description": "Return the details of the selected document type.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "put": {
        "operationId": "document_types_update",
        "description": "Edit the properties of the selected document type.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "patch": {
        "operationId": "document_types_partial_update",
        "description": "Edit the properties of the selected document type.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "delete": {
        "operationId": "document_types_delete",
        "description": "Delete the selected document type.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "parameters": [
        {
          "name": "document_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/document_types/{document_type_id}/metadata_types/": {
      "get": {
        "operationId": "document_types_metadata_types_list",
        "description": "Returns a list of selected document type's metadata types.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "post": {
        "operationId": "document_types_metadata_types_create",
        "description": "Add a metadata type to the selected document type.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "parameters": [
        {
          "name": "document_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/document_types/{document_type_id}/metadata_types/{metadata_type_id}/": {
      "get": {
        "operationId": "document_types_metadata_types_read",
        "description": "Retrieve the details of a document type metadata type.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "put": {
        "operationId": "document_types_metadata_types_update",
        "description": "Edit the selected document type metadata type.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "patch": {
        "operationId": "document_types_metadata_types_partial_update",
        "description": "Edit the selected document type metadata type.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "delete": {
        "operationId": "document_types_metadata_types_delete",
        "description": "Remove a metadata type from a document type.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "parameters": [
        {
          "name": "document_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "metadata_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/document_types/{document_type_id}/ocr/settings/": {
      "get": {
        "operationId": "document_types_ocr_settings_read",
        "description": "Return the document type OCR settings.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "put": {
        "operationId": "document_types_ocr_settings_update",
        "description": "Set the document type OCR settings.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "patch": {
        "operationId": "document_types_ocr_settings_partial_update",
        "description": "Set the document type OCR settings.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "parameters": [
        {
          "name": "document_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/document_types/{document_type_id}/parsing/settings/": {
      "get": {
        "operationId": "document_types_parsing_settings_read",
        "description": "Return the document type parsing settings.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "put": {
        "operationId": "document_types_parsing_settings_update",
        "description": "Set the document type parsing settings.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "patch": {
        "operationId": "document_types_parsing_settings_partial_update",
        "description": "Set the document type parsing settings.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "parameters": [
        {
          "name": "document_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/document_types/{document_type_id}/quick_labels/": {
      "get": {
        "operationId": "document_types_quick_labels_list",
        "description": "Returns a list of all the document type quick labels.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "post": {
        "operationId": "document_types_quick_labels_create",
        "description": "Create a new document type quick label.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "parameters": [
        {
          "name": "document_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/document_types/{document_type_id}/quick_labels/{document_type_quick_label_id}/": {
      "get": {
        "operationId": "document_types_quick_labels_read",
        "description": "Return the details of the selected quick label.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "put": {
        "operationId": "document_types_quick_labels_update",
        "description": "Edit the properties of the selected quick label.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "patch": {
        "operationId": "document_types_quick_labels_partial_update",
        "description": "Edit the properties of the selected quick label.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "delete": {
        "operationId": "document_types_quick_labels_delete",
        "description": "Delete the selected quick label.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "document_types"
        ]
      },
      "parameters": [
        {
          "name": "document_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_type_quick_label_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/document_version_modification_backends/": {
      "get": {
        "operationId": "document_version_modification_backends_list",
        "description": "Returns a list of the available document version modification backends.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "document_version_modification_backends"
        ]
      },
      "parameters": []
    },
    "/documents/": {
      "get": {
        "operationId": "documents_list",
        "description": "Returns a list of all the documents.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "post": {
        "operationId": "documents_create",
        "description": "Create a new document.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": []
    },
    "/documents/accessed/": {
      "get": {
        "operationId": "documents_accessed_list",
        "description": "Return a list of the recently accessed documents for the current user.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": []
    },
    "/documents/created/": {
      "get": {
        "operationId": "documents_created_list",
        "description": "Return a list of the recently created documents.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": []
    },
    "/documents/duplicated/": {
      "get": {
        "operationId": "documents_duplicated_list",
        "description": "Return a list of duplicated documents.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": []
    },
    "/documents/favorites/": {
      "get": {
        "operationId": "documents_favorites_list",
        "description": "Return a list of the favorite documents for the current user.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "post": {
        "operationId": "documents_favorites_create",
        "description": "Add a new document to the list of favorite documents for the current user.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": []
    },
    "/documents/favorites/{favorite_document_id}/": {
      "get": {
        "operationId": "documents_favorites_read",
        "description": "Return the details of the selected favorite document.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "delete": {
        "operationId": "documents_favorites_delete",
        "description": "Delete the selected favorite document.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "favorite_document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/upload/": {
      "post": {
        "operationId": "documents_upload_create",
        "description": "Create a new document and a new document file.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": []
    },
    "/documents/{document_id}/": {
      "get": {
        "operationId": "documents_read",
        "description": "Return the details of the selected document.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "put": {
        "operationId": "documents_update",
        "description": "Edit the properties of the selected document.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "patch": {
        "operationId": "documents_partial_update",
        "description": "Edit the properties of the selected document.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "delete": {
        "operationId": "documents_delete",
        "description": "Move the selected document to the thrash.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/cabinets/": {
      "get": {
        "operationId": "documents_cabinets_list",
        "description": "Returns a list of all the cabinets to which a document belongs.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/checkout/": {
      "get": {
        "operationId": "documents_checkout_read",
        "description": "Retrieve the checkout details of the selected document entry.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "delete": {
        "operationId": "documents_checkout_delete",
        "description": "Checkin the selected document.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/comments/": {
      "get": {
        "operationId": "documents_comments_list",
        "description": "Returns a list of all the document comments.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "post": {
        "operationId": "documents_comments_create",
        "description": "Create a new document comment.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/comments/{comment_id}/": {
      "get": {
        "operationId": "documents_comments_read",
        "description": "Returns the details of the selected document comment.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "put": {
        "operationId": "documents_comments_update",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "patch": {
        "operationId": "documents_comments_partial_update",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "delete": {
        "operationId": "documents_comments_delete",
        "description": "Delete the selected document comment.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "comment_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/duplicates/": {
      "get": {
        "operationId": "documents_duplicates_list",
        "description": "Return a list of the selected document's duplicates.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/files/": {
      "get": {
        "operationId": "documents_files_list",
        "description": "Return a list of the selected document's files.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "post": {
        "operationId": "documents_files_create",
        "description": "Create a new document file.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/files/{document_file_id}/": {
      "get": {
        "operationId": "documents_files_read",
        "description": "Returns the selected document file details.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "put": {
        "operationId": "documents_files_update",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "patch": {
        "operationId": "documents_files_partial_update",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "delete": {
        "operationId": "documents_files_delete",
        "description": "Delete the selected document file.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_file_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/files/{document_file_id}/download/": {
      "get": {
        "operationId": "documents_files_download_read",
        "description": "Download a document file.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_file_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/files/{document_file_id}/pages/": {
      "get": {
        "operationId": "documents_files_pages_list",
        "description": "",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_file_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/files/{document_file_id}/pages/{document_file_page_id}/": {
      "get": {
        "operationId": "documents_files_pages_read",
        "description": "Returns the selected document page details.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_file_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_file_page_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/files/{document_file_id}/pages/{document_file_page_id}/content/": {
      "get": {
        "operationId": "documents_files_pages_content_read",
        "description": "Returns the content of the selected document page.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_file_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_file_page_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/files/{document_file_id}/pages/{document_file_page_id}/image/": {
      "get": {
        "operationId": "documents_files_pages_image_read",
        "description": "Returns an image representation of the selected document.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_file_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_file_page_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/files/{document_file_id}/signatures/detached/": {
      "get": {
        "operationId": "documents_files_signatures_detached_list",
        "description": "Returns a list of all the detached signatures of a document file.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_file_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/files/{document_file_id}/signatures/detached/sign/": {
      "post": {
        "operationId": "documents_files_signatures_detached_sign_create",
        "description": "Sign a document file with a detached signature.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_file_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/files/{document_file_id}/signatures/detached/upload/": {
      "post": {
        "operationId": "documents_files_signatures_detached_upload_create",
        "description": "Upload a detached signature file for a document file.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_file_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/files/{document_file_id}/signatures/detached/{detached_signature_id}/": {
      "get": {
        "operationId": "documents_files_signatures_detached_read",
        "description": "Returns the details of the selected detached signature.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "delete": {
        "operationId": "documents_files_signatures_detached_delete",
        "description": "Delete an detached signature of the selected document.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_file_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "detached_signature_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/files/{document_file_id}/signatures/embedded/": {
      "get": {
        "operationId": "documents_files_signatures_embedded_list",
        "description": "Returns a list of all the embedded signatures of a document file.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_file_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/files/{document_file_id}/signatures/embedded/sign/": {
      "post": {
        "operationId": "documents_files_signatures_embedded_sign_create",
        "description": "Sign a document file with an embedded signature.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_file_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/files/{document_file_id}/signatures/embedded/{embedded_signature_id}/": {
      "get": {
        "operationId": "documents_files_signatures_embedded_read",
        "description": "Returns the details of the selected embedded signature.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_file_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "embedded_signature_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/indexes/": {
      "get": {
        "operationId": "documents_indexes_list",
        "description": "Returns a list of all the indexes instance nodes where this\ndocument is found.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/metadata/": {
      "get": {
        "operationId": "documents_metadata_list",
        "description": "Returns a list of selected document's metadata types and values.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "post": {
        "operationId": "documents_metadata_create",
        "description": "Add an existing metadata type and value to the selected document.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/metadata/{metadata_id}/": {
      "get": {
        "operationId": "documents_metadata_read",
        "description": "Return the details of the selected document metadata type and value.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "put": {
        "operationId": "documents_metadata_update",
        "description": "Edit the selected document metadata type and value.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "patch": {
        "operationId": "documents_metadata_partial_update",
        "description": "Edit the selected document metadata type and value.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "delete": {
        "operationId": "documents_metadata_delete",
        "description": "Remove this metadata entry from the selected document.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "metadata_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/ocr/submit/": {
      "post": {
        "operationId": "documents_ocr_submit_create",
        "description": "Submit a document for OCR.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/resolved_smart_links/": {
      "get": {
        "operationId": "documents_resolved_smart_links_list",
        "description": "Returns a list of the smart links that apply to the document.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/resolved_smart_links/{resolved_smart_link_id}/": {
      "get": {
        "operationId": "documents_resolved_smart_links_read",
        "description": "Return the details of the selected resolved smart link.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "resolved_smart_link_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/resolved_smart_links/{resolved_smart_link_id}/documents/": {
      "get": {
        "operationId": "documents_resolved_smart_links_documents_list",
        "description": "Returns a list of the smart link documents that apply to the document.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "resolved_smart_link_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/resolved_web_links/": {
      "get": {
        "operationId": "documents_resolved_web_links_list",
        "description": "Returns a list of resolved web links for the specified document.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/resolved_web_links/{resolved_web_link_id}/": {
      "get": {
        "operationId": "documents_resolved_web_links_read",
        "description": "Return the details of the selected resolved smart link.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "resolved_web_link_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/resolved_web_links/{resolved_web_link_id}/navigate/": {
      "get": {
        "operationId": "documents_resolved_web_links_navigate_read",
        "description": "Perform a redirection to the target URL of the selected resolved smart link.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "resolved_web_link_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/signature_captures/": {
      "get": {
        "operationId": "documents_signature_captures_list",
        "description": "Returns a list of all the signature_captures.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "post": {
        "operationId": "documents_signature_captures_create",
        "description": "Create a new signature_capture.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/signature_captures/{signature_capture_id}/": {
      "get": {
        "operationId": "documents_signature_captures_read",
        "description": "Return the details of the selected signature_capture.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "put": {
        "operationId": "documents_signature_captures_update",
        "description": "Edit the selected signature_capture.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "patch": {
        "operationId": "documents_signature_captures_partial_update",
        "description": "Edit the selected signature_capture.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "delete": {
        "operationId": "documents_signature_captures_delete",
        "description": "Delete the selected signature_capture.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "signature_capture_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/signature_captures/{signature_capture_id}/image/": {
      "get": {
        "operationId": "documents_signature_captures_image_read",
        "description": "Returns an image representation of the selected signature capture.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "signature_capture_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/tags/": {
      "get": {
        "operationId": "documents_tags_list",
        "description": "Returns a list of all the tags attached to a document.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/tags/attach/": {
      "post": {
        "operationId": "documents_tags_attach_create",
        "description": "Attach a tag to a document.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/tags/remove/": {
      "post": {
        "operationId": "documents_tags_remove_create",
        "description": "Remove a tag from a document.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/type/change/": {
      "post": {
        "operationId": "documents_type_change_create",
        "description": "Change the type of the selected document.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/versions/": {
      "get": {
        "operationId": "documents_versions_list",
        "description": "Return a list of the selected document's versions.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "post": {
        "operationId": "documents_versions_create",
        "description": "Create a new document version.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/versions/{document_version_id}/": {
      "get": {
        "operationId": "documents_versions_read",
        "description": "Returns the selected document version details.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "put": {
        "operationId": "documents_versions_update",
        "description": "Edit the properties of the selected document version.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "patch": {
        "operationId": "documents_versions_partial_update",
        "description": "Edit the properties of the selected document version.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "delete": {
        "operationId": "documents_versions_delete",
        "description": "Delete the selected document version.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_version_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/versions/{document_version_id}/export/": {
      "post": {
        "operationId": "documents_versions_export_create",
        "description": "Exports the specified document version.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_version_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/versions/{document_version_id}/modify/": {
      "post": {
        "operationId": "documents_versions_modify_create",
        "description": "Execute a modification backend on the selected document version.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_version_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/versions/{document_version_id}/ocr/submit/": {
      "post": {
        "operationId": "documents_versions_ocr_submit_create",
        "description": "Submit a document version for OCR.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_version_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/versions/{document_version_id}/pages/": {
      "get": {
        "operationId": "documents_versions_pages_list",
        "description": "Returns an list of the pages for the selected document version.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "post": {
        "operationId": "documents_versions_pages_create",
        "description": "Create a new document version page.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_version_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/versions/{document_version_id}/pages/{document_version_page_id}/": {
      "get": {
        "operationId": "documents_versions_pages_read",
        "description": "Returns the selected document version page details.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "put": {
        "operationId": "documents_versions_pages_update",
        "description": "Edit the properties of the selected document version page.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "patch": {
        "operationId": "documents_versions_pages_partial_update",
        "description": "Edit the properties of the selected document version page.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "delete": {
        "operationId": "documents_versions_pages_delete",
        "description": "Delete the selected document version page.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_version_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_version_page_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/versions/{document_version_id}/pages/{document_version_page_id}/image/": {
      "get": {
        "operationId": "documents_versions_pages_image_read",
        "description": "Returns an image representation of the selected document version page.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_version_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_version_page_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/versions/{document_version_id}/pages/{document_version_page_id}/ocr/": {
      "get": {
        "operationId": "documents_versions_pages_ocr_read",
        "description": "Returns the OCR content of the selected document page.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "put": {
        "operationId": "documents_versions_pages_ocr_update",
        "description": "Edit the OCR content of the selected document page.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "patch": {
        "operationId": "documents_versions_pages_ocr_partial_update",
        "description": "Edit the OCR content of the selected document page.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_version_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "document_version_page_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/workflow_instances/": {
      "get": {
        "operationId": "documents_workflow_instances_list",
        "description": "Returns a list of all the document workflow instances.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/workflow_instances/launch/": {
      "post": {
        "operationId": "documents_workflow_instances_launch_create",
        "description": "Launch a new workflow instance for the specified document.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/workflow_instances/{workflow_instance_id}/": {
      "get": {
        "operationId": "documents_workflow_instances_read",
        "description": "Return the details of the selected document workflow instances.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_instance_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/workflow_instances/{workflow_instance_id}/log_entries/": {
      "get": {
        "operationId": "documents_workflow_instances_log_entries_list",
        "description": "Returns a list of all the document workflow instances log entries.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "post": {
        "operationId": "documents_workflow_instances_log_entries_create",
        "description": "Transition a document workflow by creating a new document workflow instance log entry.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_instance_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/workflow_instances/{workflow_instance_id}/log_entries/transitions/": {
      "get": {
        "operationId": "documents_workflow_instances_log_entries_transitions_list",
        "description": "Returns a list of all the possible transition choices for the workflow instance.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_instance_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/{document_id}/workflow_instances/{workflow_instance_id}/log_entries/{workflow_instance_log_entry_id}/": {
      "get": {
        "operationId": "documents_workflow_instances_log_entries_read",
        "description": "Return the details of the selected document instances log entry.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_instance_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_instance_log_entry_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/event_type_namespaces/": {
      "get": {
        "operationId": "event_type_namespaces_list",
        "description": "Returns a list of all the available event type namespaces.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "event_type_namespaces"
        ]
      },
      "parameters": []
    },
    "/event_type_namespaces/{name}/": {
      "get": {
        "operationId": "event_type_namespaces_read",
        "description": "Returns the details of an event type namespace.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "event_type_namespaces"
        ]
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/event_type_namespaces/{name}/event_types/": {
      "get": {
        "operationId": "event_type_namespaces_event_types_list",
        "description": "Returns a list of all the available event types from a namespaces.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "event_type_namespaces"
        ]
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/event_types/": {
      "get": {
        "operationId": "event_types_list",
        "description": "Returns a list of all the available event types.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "event_types"
        ]
      },
      "parameters": []
    },
    "/events/": {
      "get": {
        "operationId": "events_list",
        "description": "Returns a list of all the available events.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "events"
        ]
      },
      "parameters": []
    },
    "/groups/": {
      "get": {
        "operationId": "groups_list",
        "description": "Returns a list of all the groups.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "groups"
        ]
      },
      "post": {
        "operationId": "groups_create",
        "description": "Create a new group.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "groups"
        ]
      },
      "parameters": []
    },
    "/groups/{group_id}/": {
      "get": {
        "operationId": "groups_read",
        "description": "Return the details of the selected group.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "groups"
        ]
      },
      "put": {
        "operationId": "groups_update",
        "description": "Edit the selected group.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "groups"
        ]
      },
      "patch": {
        "operationId": "groups_partial_update",
        "description": "Partially edit the selected group.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "groups"
        ]
      },
      "delete": {
        "operationId": "groups_delete",
        "description": "Delete the selected group.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "groups"
        ]
      },
      "parameters": [
        {
          "name": "group_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/groups/{group_id}/users/": {
      "get": {
        "operationId": "groups_users_list",
        "description": "Returns a list of all the users belonging to the group.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "groups"
        ]
      },
      "parameters": [
        {
          "name": "group_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/groups/{group_id}/users/add/": {
      "post": {
        "operationId": "groups_users_add_create",
        "description": "Add a user to a group.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "groups"
        ]
      },
      "parameters": [
        {
          "name": "group_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/groups/{group_id}/users/remove/": {
      "post": {
        "operationId": "groups_users_remove_create",
        "description": "Remove a user from a group.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "groups"
        ]
      },
      "parameters": [
        {
          "name": "group_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/index_instances/": {
      "get": {
        "operationId": "index_instances_list",
        "description": "Returns a list of all the indexes instances.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "index_instances"
        ]
      },
      "parameters": []
    },
    "/index_instances/{index_instance_id}/": {
      "get": {
        "operationId": "index_instances_read",
        "description": "Returns the details of the selected index instance.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "index_instances"
        ]
      },
      "parameters": [
        {
          "name": "index_instance_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/index_instances/{index_instance_id}/nodes/": {
      "get": {
        "operationId": "index_instances_nodes_list",
        "description": "Returns a list of all the nodes for the selected index instance.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "index_instances"
        ]
      },
      "parameters": [
        {
          "name": "index_instance_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/index_instances/{index_instance_id}/nodes/{index_instance_node_id}/": {
      "get": {
        "operationId": "index_instances_nodes_read",
        "description": "Returns the details of the selected index instance node.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "index_instances"
        ]
      },
      "parameters": [
        {
          "name": "index_instance_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "index_instance_node_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/index_instances/{index_instance_id}/nodes/{index_instance_node_id}/documents/": {
      "get": {
        "operationId": "index_instances_nodes_documents_list",
        "description": "Returns a list of all the documents contained by a particular\nindex instance node.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "index_instances"
        ]
      },
      "parameters": [
        {
          "name": "index_instance_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "index_instance_node_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/index_instances/{index_instance_id}/nodes/{index_instance_node_id}/nodes/": {
      "get": {
        "operationId": "index_instances_nodes_nodes_list",
        "description": "Returns list of all the children nodes for the selected index\ninstance node.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "index_instances"
        ]
      },
      "parameters": [
        {
          "name": "index_instance_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "index_instance_node_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/index_templates/": {
      "get": {
        "operationId": "index_templates_list",
        "description": "Returns a list of all the defined indexes template.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "index_templates"
        ]
      },
      "post": {
        "operationId": "index_templates_create",
        "description": "Create a new index template.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "index_templates"
        ]
      },
      "parameters": []
    },
    "/index_templates/{index_template_id}/": {
      "get": {
        "operationId": "index_templates_read",
        "description": "Returns the details of the selected index template.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "index_templates"
        ]
      },
      "put": {
        "operationId": "index_templates_update",
        "description": "Edit an index template.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "index_templates"
        ]
      },
      "patch": {
        "operationId": "index_templates_partial_update",
        "description": "Partially edit an index template.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "index_templates"
        ]
      },
      "delete": {
        "operationId": "index_templates_delete",
        "description": "Delete the selected index template.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "index_templates"
        ]
      },
      "parameters": [
        {
          "name": "index_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/index_templates/{index_template_id}/document_types/": {
      "get": {
        "operationId": "index_templates_document_types_list",
        "description": "Returns a list of the document types associated with this index template.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "index_templates"
        ]
      },
      "parameters": [
        {
          "name": "index_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/index_templates/{index_template_id}/document_types/add/": {
      "post": {
        "operationId": "index_templates_document_types_add_create",
        "description": "Add a document type to an index template.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "index_templates"
        ]
      },
      "parameters": [
        {
          "name": "index_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/index_templates/{index_template_id}/document_types/remove/": {
      "post": {
        "operationId": "index_templates_document_types_remove_create",
        "description": "Remove a document type from an index template.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "index_templates"
        ]
      },
      "parameters": [
        {
          "name": "index_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/index_templates/{index_template_id}/nodes/": {
      "get": {
        "operationId": "index_templates_nodes_list",
        "description": "Returns a list of all the template nodes for the selected index.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "index_templates"
        ]
      },
      "post": {
        "operationId": "index_templates_nodes_create",
        "description": "Create a new index template node.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "index_templates"
        ]
      },
      "parameters": [
        {
          "name": "index_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/index_templates/{index_template_id}/nodes/{index_template_node_id}/": {
      "get": {
        "operationId": "index_templates_nodes_read",
        "description": "Returns the details of the selected index template node.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "index_templates"
        ]
      },
      "put": {
        "operationId": "index_templates_nodes_update",
        "description": "Edit an index template node.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "index_templates"
        ]
      },
      "patch": {
        "operationId": "index_templates_nodes_partial_update",
        "description": "Partially edit an index template node.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "index_templates"
        ]
      },
      "delete": {
        "operationId": "index_templates_nodes_delete",
        "description": "Delete the selected index template node.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "index_templates"
        ]
      },
      "parameters": [
        {
          "name": "index_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "index_template_node_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/index_templates/{index_template_id}/rebuild/": {
      "post": {
        "operationId": "index_templates_rebuild_create",
        "description": "Rebuild the selected index template.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "index_templates"
        ]
      },
      "parameters": [
        {
          "name": "index_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/index_templates/{index_template_id}/reset/": {
      "post": {
        "operationId": "index_templates_reset_create",
        "description": "Reset the selected index template.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "index_templates"
        ]
      },
      "parameters": [
        {
          "name": "index_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/keys/": {
      "get": {
        "operationId": "keys_list",
        "description": "Returns a list of all the keys.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "keys"
        ]
      },
      "post": {
        "operationId": "keys_create",
        "description": "Upload a new key.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "keys"
        ]
      },
      "parameters": []
    },
    "/keys/{key_id}/": {
      "get": {
        "operationId": "keys_read",
        "description": "Return the details of the selected key.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "keys"
        ]
      },
      "delete": {
        "operationId": "keys_delete",
        "description": "Delete the selected key.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "keys"
        ]
      },
      "parameters": [
        {
          "name": "key_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/messages/": {
      "get": {
        "operationId": "messages_list",
        "description": "Returns a list of all the messages.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "messages"
        ]
      },
      "post": {
        "operationId": "messages_create",
        "description": "Create a new message.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "messages"
        ]
      },
      "parameters": []
    },
    "/messages/{message_id}/": {
      "get": {
        "operationId": "messages_read",
        "description": "Return the details of the selected message.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "messages"
        ]
      },
      "put": {
        "operationId": "messages_update",
        "description": "Edit the selected message.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "messages"
        ]
      },
      "patch": {
        "operationId": "messages_partial_update",
        "description": "Partially edit the selected message.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "messages"
        ]
      },
      "delete": {
        "operationId": "messages_delete",
        "description": "Delete the selected message.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "messages"
        ]
      },
      "parameters": [
        {
          "name": "message_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/metadata_types/": {
      "get": {
        "operationId": "metadata_types_list",
        "description": "Returns a list of all the metadata types.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "metadata_types"
        ]
      },
      "post": {
        "operationId": "metadata_types_create",
        "description": "Create a new metadata type.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "metadata_types"
        ]
      },
      "parameters": []
    },
    "/metadata_types/{metadata_type_id}/": {
      "get": {
        "operationId": "metadata_types_read",
        "description": "Return the details of the selected metadata type.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "metadata_types"
        ]
      },
      "put": {
        "operationId": "metadata_types_update",
        "description": "Edit the selected metadata type.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "metadata_types"
        ]
      },
      "patch": {
        "operationId": "metadata_types_partial_update",
        "description": "Edit the selected metadata type.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "metadata_types"
        ]
      },
      "delete": {
        "operationId": "metadata_types_delete",
        "description": "Delete the selected metadata type.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "metadata_types"
        ]
      },
      "parameters": [
        {
          "name": "metadata_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/notifications/": {
      "get": {
        "operationId": "notifications_list",
        "description": "Return a list of notifications for the current user.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "notifications"
        ]
      },
      "parameters": []
    },
    "/objects/{app_label}/{model_name}/permissions/": {
      "get": {
        "operationId": "objects_permissions_list",
        "description": "Returns a list of all the available permissions for a class.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "objects"
        ]
      },
      "parameters": [
        {
          "name": "app_label",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "model_name",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/objects/{app_label}/{model_name}/{object_id}/acls/": {
      "get": {
        "operationId": "objects_acls_list",
        "description": "Returns a list of all the object's access control lists",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "objects"
        ]
      },
      "post": {
        "operationId": "objects_acls_create",
        "description": "Create a new access control list for the selected object.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "objects"
        ]
      },
      "parameters": [
        {
          "name": "app_label",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "model_name",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "object_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/objects/{app_label}/{model_name}/{object_id}/acls/{acl_id}/": {
      "get": {
        "operationId": "objects_acls_read",
        "description": "Returns the details of the selected access control list.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "objects"
        ]
      },
      "delete": {
        "operationId": "objects_acls_delete",
        "description": "Delete the selected access control list.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "objects"
        ]
      },
      "parameters": [
        {
          "name": "app_label",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "model_name",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "object_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "acl_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/objects/{app_label}/{model_name}/{object_id}/acls/{acl_id}/permissions/": {
      "get": {
        "operationId": "objects_acls_permissions_list",
        "description": "Returns the access control list permission list.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "objects"
        ]
      },
      "post": {
        "operationId": "objects_acls_permissions_create",
        "description": "Add a new permission to the selected access control list.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "objects"
        ]
      },
      "parameters": [
        {
          "name": "app_label",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "model_name",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "object_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "acl_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/objects/{app_label}/{model_name}/{object_id}/acls/{acl_id}/permissions/add/": {
      "post": {
        "operationId": "objects_acls_permissions_add_create",
        "description": "Add a permission to an ACL.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "objects"
        ]
      },
      "parameters": [
        {
          "name": "app_label",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "model_name",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "object_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "acl_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/objects/{app_label}/{model_name}/{object_id}/acls/{acl_id}/permissions/remove/": {
      "post": {
        "operationId": "objects_acls_permissions_remove_create",
        "description": "Remove a permission from an ACL.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "objects"
        ]
      },
      "parameters": [
        {
          "name": "app_label",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "model_name",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "object_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "acl_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/objects/{app_label}/{model_name}/{object_id}/errors/": {
      "get": {
        "operationId": "objects_errors_list",
        "description": "Returns a list of all the object's error log entries",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "objects"
        ]
      },
      "parameters": [
        {
          "name": "app_label",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "model_name",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "object_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/objects/{app_label}/{model_name}/{object_id}/errors/{error_log_partition_entry_id}/": {
      "get": {
        "operationId": "objects_errors_read",
        "description": "Returns the details of the selected error log entry.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "objects"
        ]
      },
      "delete": {
        "operationId": "objects_errors_delete",
        "description": "Delete the selected error log entry.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "objects"
        ]
      },
      "parameters": [
        {
          "name": "app_label",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "model_name",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "object_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "error_log_partition_entry_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/objects/{app_label}/{model_name}/{object_id}/events/": {
      "get": {
        "operationId": "objects_events_list",
        "description": "Return a list of events for the specified object.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "objects"
        ]
      },
      "parameters": [
        {
          "name": "app_label",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "model_name",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "object_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/objects/{app_label}/{model_name}/{object_id}/image/": {
      "get": {
        "operationId": "objects_image_read",
        "description": "Returns an image representation of the selected content object.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "objects"
        ]
      },
      "parameters": [
        {
          "name": "app_label",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "model_name",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "object_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/permissions/": {
      "get": {
        "operationId": "permissions_list",
        "description": "Returns a list of all the available permissions.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "permissions"
        ]
      },
      "parameters": []
    },
    "/project/": {
      "get": {
        "operationId": "project_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "project"
        ]
      },
      "parameters": []
    },
    "/roles/": {
      "get": {
        "operationId": "roles_list",
        "description": "Returns a list of all the roles.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "roles"
        ]
      },
      "post": {
        "operationId": "roles_create",
        "description": "Create a new role.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "roles"
        ]
      },
      "parameters": []
    },
    "/roles/{role_id}/": {
      "get": {
        "operationId": "roles_read",
        "description": "Return the details of the selected role.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "roles"
        ]
      },
      "put": {
        "operationId": "roles_update",
        "description": "Edit the selected role.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "roles"
        ]
      },
      "patch": {
        "operationId": "roles_partial_update",
        "description": "Edit the selected role.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "roles"
        ]
      },
      "delete": {
        "operationId": "roles_delete",
        "description": "Delete the selected role.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "roles"
        ]
      },
      "parameters": [
        {
          "name": "role_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/roles/{role_id}/groups/": {
      "get": {
        "operationId": "roles_groups_list",
        "description": "Returns a list of all the groups granted to a particular role.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "roles"
        ]
      },
      "parameters": [
        {
          "name": "role_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/roles/{role_id}/groups/add/": {
      "post": {
        "operationId": "roles_groups_add_create",
        "description": "Add a group to a role.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "roles"
        ]
      },
      "parameters": [
        {
          "name": "role_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/roles/{role_id}/groups/remove/": {
      "post": {
        "operationId": "roles_groups_remove_create",
        "description": "Remove a group from a role.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "roles"
        ]
      },
      "parameters": [
        {
          "name": "role_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/roles/{role_id}/permissions/": {
      "get": {
        "operationId": "roles_permissions_list",
        "description": "Returns a list of all the permissions granted to a particular role.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "roles"
        ]
      },
      "parameters": [
        {
          "name": "role_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/roles/{role_id}/permissions/add/": {
      "post": {
        "operationId": "roles_permissions_add_create",
        "description": "Add a permission to a role.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "roles"
        ]
      },
      "parameters": [
        {
          "name": "role_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/roles/{role_id}/permissions/remove/": {
      "post": {
        "operationId": "roles_permissions_remove_create",
        "description": "Remove a permission from a role.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "roles"
        ]
      },
      "parameters": [
        {
          "name": "role_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/search/advanced/{search_model_pk}/": {
      "get": {
        "operationId": "search_advanced_read",
        "description": "Perform an advanced search operation",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "search"
        ]
      },
      "parameters": [
        {
          "name": "search_model_pk",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/search/{search_model_pk}/": {
      "get": {
        "operationId": "search_read",
        "description": "Perform a search operation",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "search"
        ]
      },
      "parameters": [
        {
          "name": "search_model_pk",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/search_models/": {
      "get": {
        "operationId": "search_models_list",
        "description": "Returns a list of all the available search models.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "search_models"
        ]
      },
      "parameters": []
    },
    "/smart_links/": {
      "get": {
        "operationId": "smart_links_list",
        "description": "Returns a list of all the smart links.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "smart_links"
        ]
      },
      "post": {
        "operationId": "smart_links_create",
        "description": "Create a new smart link.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "smart_links"
        ]
      },
      "parameters": []
    },
    "/smart_links/{smart_link_id}/": {
      "get": {
        "operationId": "smart_links_read",
        "description": "Return the details of the selected smart link.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "smart_links"
        ]
      },
      "put": {
        "operationId": "smart_links_update",
        "description": "Edit the selected smart link.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "smart_links"
        ]
      },
      "patch": {
        "operationId": "smart_links_partial_update",
        "description": "Edit the selected smart link.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "smart_links"
        ]
      },
      "delete": {
        "operationId": "smart_links_delete",
        "description": "Delete the selected smart link.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "smart_links"
        ]
      },
      "parameters": [
        {
          "name": "smart_link_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/smart_links/{smart_link_id}/conditions/": {
      "get": {
        "operationId": "smart_links_conditions_list",
        "description": "Returns a list of all the smart link conditions.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "smart_links"
        ]
      },
      "post": {
        "operationId": "smart_links_conditions_create",
        "description": "Create a new smart link condition.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "smart_links"
        ]
      },
      "parameters": [
        {
          "name": "smart_link_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/smart_links/{smart_link_id}/conditions/{smart_link_condition_id}/": {
      "get": {
        "operationId": "smart_links_conditions_read",
        "description": "Return the details of the selected smart link condition.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "smart_links"
        ]
      },
      "put": {
        "operationId": "smart_links_conditions_update",
        "description": "Edit the selected smart link condition.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "smart_links"
        ]
      },
      "patch": {
        "operationId": "smart_links_conditions_partial_update",
        "description": "Edit the selected smart link condition.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "smart_links"
        ]
      },
      "delete": {
        "operationId": "smart_links_conditions_delete",
        "description": "Delete the selected smart link condition.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "smart_links"
        ]
      },
      "parameters": [
        {
          "name": "smart_link_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "smart_link_condition_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/smart_links/{smart_link_id}/document_types/": {
      "get": {
        "operationId": "smart_links_document_types_list",
        "description": "Return a list of the selected smart link document types.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "smart_links"
        ]
      },
      "parameters": [
        {
          "name": "smart_link_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/smart_links/{smart_link_id}/document_types/add/": {
      "post": {
        "operationId": "smart_links_document_types_add_create",
        "description": "Add a document type to a smart link.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "smart_links"
        ]
      },
      "parameters": [
        {
          "name": "smart_link_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/smart_links/{smart_link_id}/document_types/remove/": {
      "post": {
        "operationId": "smart_links_document_types_remove_create",
        "description": "Remove a document type from a smart link.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "smart_links"
        ]
      },
      "parameters": [
        {
          "name": "smart_link_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/sources/": {
      "get": {
        "operationId": "sources_list",
        "description": "Returns a list of all the source.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "sources"
        ]
      },
      "post": {
        "operationId": "sources_create",
        "description": "Create a new source.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "sources"
        ]
      },
      "parameters": []
    },
    "/sources/{source_id}/": {
      "get": {
        "operationId": "sources_read",
        "description": "Details of the selected source.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "sources"
        ]
      },
      "put": {
        "operationId": "sources_update",
        "description": "Edit the selected source.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "sources"
        ]
      },
      "patch": {
        "operationId": "sources_partial_update",
        "description": "Edit the selected source.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "sources"
        ]
      },
      "delete": {
        "operationId": "sources_delete",
        "description": "Delete the selected source.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "sources"
        ]
      },
      "parameters": [
        {
          "name": "source_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/sources/{source_id}/actions/{action_name}/": {
      "get": {
        "operationId": "sources_actions_read",
        "description": "Get data from a source action.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "sources"
        ]
      },
      "post": {
        "operationId": "sources_actions_create",
        "description": "Execute a source action.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "sources"
        ]
      },
      "parameters": [
        {
          "name": "source_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "action_name",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/tags/": {
      "get": {
        "operationId": "tags_list",
        "description": "Returns a list of all the tags.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tags"
        ]
      },
      "post": {
        "operationId": "tags_create",
        "description": "Create a new tag.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "tags"
        ]
      },
      "parameters": []
    },
    "/tags/{tag_id}/": {
      "get": {
        "operationId": "tags_read",
        "description": "Return the details of the selected tag.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tags"
        ]
      },
      "put": {
        "operationId": "tags_update",
        "description": "Edit the selected tag.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tags"
        ]
      },
      "patch": {
        "operationId": "tags_partial_update",
        "description": "Edit the selected tag.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tags"
        ]
      },
      "delete": {
        "operationId": "tags_delete",
        "description": "Delete the selected tag.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "tags"
        ]
      },
      "parameters": [
        {
          "name": "tag_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/tags/{tag_id}/documents/": {
      "get": {
        "operationId": "tags_documents_list",
        "description": "Returns a list of all the documents tagged by a particular tag.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tags"
        ]
      },
      "parameters": [
        {
          "name": "tag_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/templates/": {
      "get": {
        "operationId": "templates_list",
        "description": "Returns a list of all the available templates.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "templates"
        ]
      },
      "parameters": []
    },
    "/templates/{name}/": {
      "get": {
        "operationId": "templates_read",
        "description": "Retrieve the details of the partial template.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "templates"
        ]
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/trashed_documents/": {
      "get": {
        "operationId": "trashed_documents_list",
        "description": "Returns a list of all the trashed documents.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "trashed_documents"
        ]
      },
      "parameters": []
    },
    "/trashed_documents/{document_id}/": {
      "get": {
        "operationId": "trashed_documents_read",
        "description": "Retreive the details of the trashed document.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "trashed_documents"
        ]
      },
      "delete": {
        "operationId": "trashed_documents_delete",
        "description": "Delete the trashed document.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "trashed_documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/trashed_documents/{document_id}/image/": {
      "get": {
        "operationId": "trashed_documents_image_read",
        "description": "Returns an image representation of the selected trashed document.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "trashed_documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/trashed_documents/{document_id}/restore/": {
      "post": {
        "operationId": "trashed_documents_restore_create",
        "description": "Restore a trashed document.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "trashed_documents"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/": {
      "get": {
        "operationId": "users_list",
        "description": "Returns a list of all the users.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "post": {
        "operationId": "users_create",
        "description": "Create a new user.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/current/": {
      "get": {
        "operationId": "users_current_read",
        "description": "Return the details of the current user.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "users_current_update",
        "description": "Edit the current user.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "patch": {
        "operationId": "users_current_partial_update",
        "description": "Partially edit the current user.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "users_current_delete",
        "description": "Delete the current user.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/{user_id}/": {
      "get": {
        "operationId": "users_read",
        "description": "Return the details of the selected user.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "users_update",
        "description": "Edit the selected user.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "patch": {
        "operationId": "users_partial_update",
        "description": "Partially edit the selected user.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "users_delete",
        "description": "Delete the selected user.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "user_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/{user_id}/groups/": {
      "get": {
        "operationId": "users_groups_list",
        "description": "Returns a list of all the groups to which the user belongings.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "user_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/web_links/": {
      "get": {
        "operationId": "web_links_list",
        "description": "Returns a list of all the web links.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "web_links"
        ]
      },
      "post": {
        "operationId": "web_links_create",
        "description": "Create a new web link.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "web_links"
        ]
      },
      "parameters": []
    },
    "/web_links/{web_link_id}/": {
      "get": {
        "operationId": "web_links_read",
        "description": "Return the details of the selected web link.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "web_links"
        ]
      },
      "put": {
        "operationId": "web_links_update",
        "description": "Edit the selected web link.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "web_links"
        ]
      },
      "patch": {
        "operationId": "web_links_partial_update",
        "description": "Edit the selected web link.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "web_links"
        ]
      },
      "delete": {
        "operationId": "web_links_delete",
        "description": "Delete the selected web link.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "web_links"
        ]
      },
      "parameters": [
        {
          "name": "web_link_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/web_links/{web_link_id}/document_types/": {
      "get": {
        "operationId": "web_links_document_types_list",
        "description": "Return a list of the selected web link document types.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "web_links"
        ]
      },
      "parameters": [
        {
          "name": "web_link_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/web_links/{web_link_id}/document_types/add/": {
      "post": {
        "operationId": "web_links_document_types_add_create",
        "description": "Add a document type to a web link.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "web_links"
        ]
      },
      "parameters": [
        {
          "name": "web_link_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/web_links/{web_link_id}/document_types/remove/": {
      "post": {
        "operationId": "web_links_document_types_remove_create",
        "description": "Remove a document type from a web link.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "web_links"
        ]
      },
      "parameters": [
        {
          "name": "web_link_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/workflow_templates/": {
      "get": {
        "operationId": "workflow_templates_list",
        "description": "Returns a list of all the workflow templates.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "post": {
        "operationId": "workflow_templates_create",
        "description": "Create a new workflow template.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "parameters": []
    },
    "/workflow_templates/{workflow_template_id}/": {
      "get": {
        "operationId": "workflow_templates_read",
        "description": "Return the details of the selected workflow template.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "put": {
        "operationId": "workflow_templates_update",
        "description": "Edit the selected workflow template.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "patch": {
        "operationId": "workflow_templates_partial_update",
        "description": "Edit the selected workflow template.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "delete": {
        "operationId": "workflow_templates_delete",
        "description": "Delete the selected workflow template.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "parameters": [
        {
          "name": "workflow_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/workflow_templates/{workflow_template_id}/document_types/": {
      "get": {
        "operationId": "workflow_templates_document_types_list",
        "description": "Returns a list of all the document types attached to a workflow template.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "parameters": [
        {
          "name": "workflow_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/workflow_templates/{workflow_template_id}/document_types/add/": {
      "post": {
        "operationId": "workflow_templates_document_types_add_create",
        "description": "Add a document type to a workflow template.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "parameters": [
        {
          "name": "workflow_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/workflow_templates/{workflow_template_id}/document_types/remove/": {
      "post": {
        "operationId": "workflow_templates_document_types_remove_create",
        "description": "Remove a document type from a workflow template.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "parameters": [
        {
          "name": "workflow_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/workflow_templates/{workflow_template_id}/image/": {
      "get": {
        "operationId": "workflow_templates_image_read",
        "description": "Returns an image representation of the selected workflow template.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "parameters": [
        {
          "name": "workflow_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/workflow_templates/{workflow_template_id}/states/": {
      "get": {
        "operationId": "workflow_templates_states_list",
        "description": "Returns a list of all the workflow template states.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "post": {
        "operationId": "workflow_templates_states_create",
        "description": "Create a new workflow template state.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "parameters": [
        {
          "name": "workflow_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/workflow_templates/{workflow_template_id}/states/{workflow_template_state_id}/": {
      "get": {
        "operationId": "workflow_templates_states_read",
        "description": "Return the details of the selected workflow template state.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "put": {
        "operationId": "workflow_templates_states_update",
        "description": "Edit the selected workflow template state.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "patch": {
        "operationId": "workflow_templates_states_partial_update",
        "description": "Edit the selected workflow template state.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "delete": {
        "operationId": "workflow_templates_states_delete",
        "description": "Delete the selected workflow template state.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "parameters": [
        {
          "name": "workflow_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_template_state_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/workflow_templates/{workflow_template_id}/states/{workflow_template_state_id}/actions/": {
      "get": {
        "operationId": "workflow_templates_states_actions_list",
        "description": "Returns a list of all the workflow template state actions.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "post": {
        "operationId": "workflow_templates_states_actions_create",
        "description": "Create a new workflow template state action.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "parameters": [
        {
          "name": "workflow_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_template_state_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/workflow_templates/{workflow_template_id}/states/{workflow_template_state_id}/actions/{workflow_template_state_action_id}/": {
      "get": {
        "operationId": "workflow_templates_states_actions_read",
        "description": "Return the details of the selected workflow template state action.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "put": {
        "operationId": "workflow_templates_states_actions_update",
        "description": "Edit the selected workflow template state action.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "patch": {
        "operationId": "workflow_templates_states_actions_partial_update",
        "description": "Edit the selected workflow template state action.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "delete": {
        "operationId": "workflow_templates_states_actions_delete",
        "description": "Delete the selected workflow template state action.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "parameters": [
        {
          "name": "workflow_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_template_state_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_template_state_action_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/workflow_templates/{workflow_template_id}/states/{workflow_template_state_id}/escalations/": {
      "get": {
        "operationId": "workflow_templates_states_escalations_list",
        "description": "Returns a list of all the workflow template state escalations.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "post": {
        "operationId": "workflow_templates_states_escalations_create",
        "description": "Create a new workflow template state escalation.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "parameters": [
        {
          "name": "workflow_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_template_state_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/workflow_templates/{workflow_template_id}/states/{workflow_template_state_id}/escalations/{workflow_template_state_escalation_id}/": {
      "get": {
        "operationId": "workflow_templates_states_escalations_read",
        "description": "Return the details of the selected workflow template state escalation.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "put": {
        "operationId": "workflow_templates_states_escalations_update",
        "description": "Edit the selected workflow template state escalation.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "patch": {
        "operationId": "workflow_templates_states_escalations_partial_update",
        "description": "Edit the selected workflow template state escalation.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "delete": {
        "operationId": "workflow_templates_states_escalations_delete",
        "description": "Delete the selected workflow template state escalation.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "parameters": [
        {
          "name": "workflow_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_template_state_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_template_state_escalation_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/workflow_templates/{workflow_template_id}/transitions/": {
      "get": {
        "operationId": "workflow_templates_transitions_list",
        "description": "Returns a list of all the workflow template transitions.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "post": {
        "operationId": "workflow_templates_transitions_create",
        "description": "Create a new workflow template transition.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "parameters": [
        {
          "name": "workflow_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/workflow_templates/{workflow_template_id}/transitions/{workflow_template_transition_id}/": {
      "get": {
        "operationId": "workflow_templates_transitions_read",
        "description": "Return the details of the selected workflow template transition.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "put": {
        "operationId": "workflow_templates_transitions_update",
        "description": "Edit the selected workflow template transition.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "patch": {
        "operationId": "workflow_templates_transitions_partial_update",
        "description": "Edit the selected workflow template transition.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "delete": {
        "operationId": "workflow_templates_transitions_delete",
        "description": "Delete the selected workflow template transition.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "parameters": [
        {
          "name": "workflow_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_template_transition_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/workflow_templates/{workflow_template_id}/transitions/{workflow_template_transition_id}/fields/": {
      "get": {
        "operationId": "workflow_templates_transitions_fields_list",
        "description": "Returns a list of all the workflow template transition fields.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "post": {
        "operationId": "workflow_templates_transitions_fields_create",
        "description": "Create a new workflow template transition field.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "parameters": [
        {
          "name": "workflow_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_template_transition_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/workflow_templates/{workflow_template_id}/transitions/{workflow_template_transition_id}/fields/{workflow_template_transition_field_id}": {
      "get": {
        "operationId": "workflow_templates_transitions_fields_read",
        "description": "Return the details of the selected workflow template transition field.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "put": {
        "operationId": "workflow_templates_transitions_fields_update",
        "description": "Edit the selected workflow template transition field.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "patch": {
        "operationId": "workflow_templates_transitions_fields_partial_update",
        "description": "Edit the selected workflow template transition field.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "delete": {
        "operationId": "workflow_templates_transitions_fields_delete",
        "description": "Delete the selected workflow template transition field.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "parameters": [
        {
          "name": "workflow_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_template_transition_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_template_transition_field_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/workflow_templates/{workflow_template_id}/transitions/{workflow_template_transition_id}/triggers/": {
      "get": {
        "operationId": "workflow_templates_transitions_triggers_list",
        "description": "Returns a list of all the workflow template transition triggers.",
        "parameters": [
          {
            "name": "_ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "post": {
        "operationId": "workflow_templates_transitions_triggers_create",
        "description": "Create a new workflow template transition trigger.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "parameters": [
        {
          "name": "workflow_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_template_transition_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/workflow_templates/{workflow_template_id}/transitions/{workflow_template_transition_id}/triggers/{workflow_template_transition_trigger_id}": {
      "get": {
        "operationId": "workflow_templates_transitions_triggers_read",
        "description": "Return the details of the selected workflow template transition trigger.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "put": {
        "operationId": "workflow_templates_transitions_triggers_update",
        "description": "Edit the selected workflow template transition trigger.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "patch": {
        "operationId": "workflow_templates_transitions_triggers_partial_update",
        "description": "Edit the selected workflow template transition trigger.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "delete": {
        "operationId": "workflow_templates_transitions_triggers_delete",
        "description": "Delete the selected workflow template transition trigger.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "parameters": [
        {
          "name": "workflow_template_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_template_transition_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "workflow_template_transition_trigger_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    }
  },
  "definitions": {
    "AuthToken": {
      "required": [
        "username",
        "password"
      ],
      "type": "object",
      "properties": {
        "username": {
          "title": "Username",
          "type": "string",
          "minLength": 1
        },
        "password": {
          "title": "Password",
          "type": "string",
          "minLength": 1
        },
        "token": {
          "title": "Token",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        }
      }
    }
  }
}